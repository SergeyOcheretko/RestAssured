name: RestAssured API Tests

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4

      - name: ‚òï Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: üì• Download previous Allure history
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: allure-history
          path: target/allure-history

      - name: üìÇ Copy history into results
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path target\allure-results\history | Out-Null
          if (Test-Path target\allure-history) {
            Copy-Item target\allure-history\* -Recurse -Force -Destination target\allure-results\history\
            Write-Host "‚úÖ History copied"
          } else {
            Write-Host "‚ö†Ô∏è No previous history to copy"
          }

      - name: üß™ Run tests
        run: mvn clean test

      - name: üß¨ Add Allure metadata
        shell: pwsh
        run: |
          $executor = @'
  {
    "name": "GitHub Actions",
    "type": "github",
    "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
    "buildName": "${{ github.workflow }}",
    "buildOrder": "${{ github.run_number }}",
    "buildUrl": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
  }
  '@
          $envProps = @'
  CI=GitHub Actions
  OS=windows-latest
  Java=17
  '@
          $categories = @'
  [
    {
      "name": "AssertionError",
      "matchedStatuses": ["failed"],
      "matchedMessages": ["expected .* but found .*"]
    },
    {
      "name": "Timeouts",
      "matchedStatuses": ["broken"],
      "matchedMessages": ["(?i).*timed out.*"]
    },
    {
      "name": "Infrastructure issues",
      "matchedStatuses": ["broken"],
      "matchedMessages": ["Connection refused", "No route to host"]
    }
  ]
  '@

          $outPath = "target\allure-results"
          New-Item -ItemType Directory -Force -Path $outPath | Out-Null
          $executor | Set-Content "$outPath\executor.json" -Encoding UTF8
          $envProps | Set-Content "$outPath\environment.properties" -Encoding UTF8
          $categories | Set-Content "$outPath\categories.json" -Encoding UTF8

      - name: üìä Generate Allure report
        shell: pwsh
        run: |
          npm install -g allure-commandline --force
          allure generate target\allure-results --clean -o target\allure-report

      - name: üì§ Upload latest history for TREND
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-history
          path: target/allure-report/history

      - name: üóÉÔ∏è Upload Allure report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/allure-report

      - name: üì¨ Notify via Telegram
        shell: pwsh
        run: |
          $count = (Get-ChildItem -Recurse -File target\allure-results).Count
          if ($count -eq 0) {
            $text = "‚ö†Ô∏è RestAssuredTests ‚Äî —Å–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞, –Ω–æ Allure-–æ—Ç—á—ë—Ç –ø—É—Å—Ç"
          } else {
            $text = "‚úÖ RestAssuredTests ‚Äî —Å–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞"
          }

          $body = @{
            chat_id = 488207930
            parse_mode = "HTML"
            text = $text
            reply_markup = '{"inline_keyboard": [[{"text": "üìä –°–º–æ—Ç—Ä–µ—Ç—å Allure-–æ—Ç—á—ë—Ç", "url": "https://sergeyocheretko.github.io/RestAssured/"}]]}'
}

  Invoke-RestMethod -Uri "https://api.telegram.org/bot7061709468:AAG58ymjWRKuDFQc8zTH6t7FgYZFTeVlYhw/sendMessage" -Method Post -Body $body

- name: üöÄ Deploy to GitHub Pages
  if: success()
  uses: peaceiris/actions-gh-pages@v4
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_branch: gh-pages
    publish_dir: target/allure-report
    force_orphan: true
