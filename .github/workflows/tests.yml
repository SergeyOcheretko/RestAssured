name: RestAssured API Tests

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4

      - name: ‚òï Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: ü™Ñ Clone gh-pages to get history
        continue-on-error: true
        shell: pwsh
        run: |
          git config --global user.email "github-actions@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          git clone --depth=1 --branch=gh-pages https://github.com/${{ github.repository }} gh-pages-copy

      - name: üìÇ Copy history into results
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path "target\allure-results\history" | Out-Null
          if (Test-Path "gh-pages-copy\history") {
            Copy-Item "gh-pages-copy\history\*" -Destination "target\allure-results\history" -Recurse -Force
          } else {
            Write-Output "üì≠ –ò—Å—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
          }

      - name: üß™ Run tests
        shell: pwsh
        run: mvn clean test

      - name: üß¨ Add Allure metadata
        shell: pwsh
        run: |
          if (-not (Test-Path "target\allure-results")) {
            New-Item -ItemType Directory -Path "target\allure-results"
          }

          $executor = @{
            name = "GitHub Actions"
            type = "github"
            url = "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            buildName = "${{ github.workflow }}"
            buildOrder = "${{ github.run_number }}"
            buildUrl = "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          } | ConvertTo-Json -Depth 2

          $executor | Set-Content "target\allure-results\executor.json" -Encoding UTF8

          @"
  CI=GitHub Actions
  OS=windows-latest
  Java=17
  "@ | Set-Content "target\allure-results\environment.properties"

- name: üìä Generate Allure report
  shell: pwsh
  run: |
    npm install -g allure-commandline --force
    allure generate target\allure-results --clean -o target\allure-report

- name: üì¨ Telegram notification
  shell: pwsh
  run: |
    $count = (Get-ChildItem -Recurse -File target\allure-results | Measure-Object).Count
    if ($count -eq 0) {
      $text = "‚ö†Ô∏è RestAssuredTests ‚Äî —Å–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞, –Ω–æ Allure-–æ—Ç—á—ë—Ç –ø—É—Å—Ç"
    } else {
      $text = "‚úÖ RestAssuredTests ‚Äî —Å–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞"
    }

    $url = "https://api.telegram.org/bot7061709468:AAG58ymjWRKuDFQc8zTH6t7FgYZFTeVlYhw/sendMessage"
    $body = @{
      chat_id = 488207930
      parse_mode = "HTML"
      text = $text
      reply_markup = '{"inline_keyboard":[[{"text":"üìä –°–º–æ—Ç—Ä–µ—Ç—å Allure-–æ—Ç—á—ë—Ç","url":"https://sergeyocheretko.github.io/RestAssured/"}]]}'
    }

    Invoke-RestMethod -Uri $url -Method Post -Body $body

- name: üöÄ Deploy to GitHub Pages
  if: success()
  uses: peaceiris/actions-gh-pages@v4
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_branch: gh-pages
    publish_dir: target/allure-report
    force_orphan: true

