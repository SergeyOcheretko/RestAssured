name: RestAssured API Tests

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4

      - name: ‚òï Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: üì¶ Maven dependency check (Allure presence)
        run: mvn dependency:tree | grep allure || echo "‚ö†Ô∏è Allure –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"

      - name: üß™ Run tests
        run: mvn clean test

      - name: üîç Check allure-results contents
        run: |
          echo "üìÇ –§–∞–π–ª—ã –≤ target/allure-results:"
          ls -la target/allure-results || echo "‚ùå –ü–∞–ø–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
          echo "üìä –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤:"
          FILE_COUNT=$(find target/allure-results -type f | wc -l)
          echo "–ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: $FILE_COUNT"
          if [ "$FILE_COUNT" -eq "0" ]; then
            echo "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Allure ‚Äî –æ—Ç—á—ë—Ç –±—É–¥–µ—Ç –ø—É—Å—Ç–æ–π"
          fi

      - name: üìä Generate Allure report
        run: |
          npm install -g allure-commandline --force
          allure generate target/allure-results --clean -o target/allure-report

      - name: üîç Debug Allure report contents
        run: ls -la target/allure-report || echo "‚ö†Ô∏è –ù–µ—Ç –æ—Ç—á—ë—Ç–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"

      - name: üóÉÔ∏è Upload Allure report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/allure-report

      - name: üì¨ Send Telegram notification with button
        run: |
          STATUS=${{ job.status }}
          FILE_COUNT=$(find target/allure-results -type f | wc -l)
          if [ "$STATUS" == "success" ] && [ "$FILE_COUNT" -gt "0" ]; then
            TEXT="‚úÖ RestAssuredTests ‚Äî —Å–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞"
          elif [ "$STATUS" == "success" ] && [ "$FILE_COUNT" -eq "0" ]; then
            TEXT="‚ö†Ô∏è RestAssuredTests ‚Äî —Å–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞, –Ω–æ Allure-–æ—Ç—á—ë—Ç –ø—É—Å—Ç"
          elif [ "$STATUS" == "failure" ]; then
            TEXT="‚ùå RestAssuredTests ‚Äî –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö"
          else
            TEXT="‚ö†Ô∏è RestAssuredTests ‚Äî —Å—Ç–∞—Ç—É—Å: $STATUS"
          fi

          curl -s -X POST "https://api.telegram.org/bot7061709468:AAG58ymjWRKuDFQc8zTH6t7FgYZFTeVlYhw/sendMessage" \
            -d chat_id=488207930 \
            -d parse_mode=HTML \
            --data-urlencode "text=$TEXT" \
            --data-urlencode "reply_markup={
              \"inline_keyboard\": [[
                {\"text\": \"üìä –°–º–æ—Ç—Ä–µ—Ç—å Allure-–æ—Ç—á—ë—Ç\", \"url\": \"https://sergeyocheretko.github.io/RestAssured/\"}
              ]]
            }"

      - name: üöÄ Deploy to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: target/allure-report
          force_orphan: true
